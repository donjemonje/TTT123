//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClintTest.GameService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupData", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class GroupData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlayerNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] PlayersNamesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerNo {
            get {
                return this.PlayerNoField;
            }
            set {
                if ((this.PlayerNoField.Equals(value) != true)) {
                    this.PlayerNoField = value;
                    this.RaisePropertyChanged("PlayerNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] PlayersNames {
            get {
                return this.PlayersNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayersNamesField, value) != true)) {
                    this.PlayersNamesField = value;
                    this.RaisePropertyChanged("PlayersNames");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameService.IGameService", CallbackContract=typeof(ClintTest.GameService.IGameServiceCallback))]
    public interface IGameService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/LogIn", ReplyAction="http://tempuri.org/IGameService/LogInResponse")]
        ClintTest.GameService.GroupData LogIn(int gameCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/LogIn", ReplyAction="http://tempuri.org/IGameService/LogInResponse")]
        System.Threading.Tasks.Task<ClintTest.GameService.GroupData> LogInAsync(int gameCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/Status")]
        void Status(int gameCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/Status")]
        System.Threading.Tasks.Task StatusAsync(int gameCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/Move")]
        void Move(int gameCode, int moveFrom, int moveTo, bool win);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/Move")]
        System.Threading.Tasks.Task MoveAsync(int gameCode, int moveFrom, int moveTo, bool win);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/WaitingMyTurn")]
        void WaitingMyTurn(int gameCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/WaitingMyTurn")]
        System.Threading.Tasks.Task WaitingMyTurnAsync(int gameCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/Waiting")]
        void Waiting();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/InitBoard")]
        void InitBoard(ClintTest.GameService.GroupData rival, bool yourTurn);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/UpdateBoard")]
        void UpdateBoard(int moveFrom, int moveTo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/YouLost")]
        void YouLost();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameServiceChannel : ClintTest.GameService.IGameService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameServiceClient : System.ServiceModel.DuplexClientBase<ClintTest.GameService.IGameService>, ClintTest.GameService.IGameService {
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public ClintTest.GameService.GroupData LogIn(int gameCode) {
            return base.Channel.LogIn(gameCode);
        }
        
        public System.Threading.Tasks.Task<ClintTest.GameService.GroupData> LogInAsync(int gameCode) {
            return base.Channel.LogInAsync(gameCode);
        }
        
        public void Status(int gameCode) {
            base.Channel.Status(gameCode);
        }
        
        public System.Threading.Tasks.Task StatusAsync(int gameCode) {
            return base.Channel.StatusAsync(gameCode);
        }
        
        public void Move(int gameCode, int moveFrom, int moveTo, bool win) {
            base.Channel.Move(gameCode, moveFrom, moveTo, win);
        }
        
        public System.Threading.Tasks.Task MoveAsync(int gameCode, int moveFrom, int moveTo, bool win) {
            return base.Channel.MoveAsync(gameCode, moveFrom, moveTo, win);
        }
        
        public void WaitingMyTurn(int gameCode) {
            base.Channel.WaitingMyTurn(gameCode);
        }
        
        public System.Threading.Tasks.Task WaitingMyTurnAsync(int gameCode) {
            return base.Channel.WaitingMyTurnAsync(gameCode);
        }
    }
}
